- name: Set Up
  block:
    - name: Sign in as admin
      shell: "{{keycloak_home}}/bin/kcadm.sh config credentials --server http://localhost:8080 --realm master --user admin --password admin"
      register: signin

- name: pull jar
  block:
    - name: fetch jar from github
      ansible.builtin.get_url:
        url: "{{jarfile_url}}"
        dest: /tmp/password-min-time-policy-0.0.1.jar
        headers:
          Accept: application/vnd.github+json
          Authorization: "Bearer {{github_pat}}"
      delegate_to: localhost

      vars:
        - jarfile_url: https://maven.pkg.github.com/mitre/keycloak-custom-policies/org/keycloak/policy/password-min-time-policy/0.0.1-SNAPSHOT/password-min-time-policy-0.0.1-20220902.182228-2.jar
        - github_pat:
  tags:
    - xccdf_hdf_group_KEYC-01-000047


- name: Upgrade pip
  ansible.builtin.pip:
    name: pip
    state: present
    extra_args: --upgrade
  tags: test

- name: Install pip dependencies
  ansible.builtin.pip:
    name:
#      - python3-dnf
      - setuptools
      - virtualenv
      - cryptography
    state: present
  tags: test

#- name: Install ntpdate
#  ansible.builtin.package:
#    name:
#      - update
#      - unzip
#    state: present
#  tags: test



- name: HTTPS Certificate Configuration
  block:
    - name: Copy SSL Certificate
      copy:
        src: "{{https_certificate_files}}"
        dest: "{{https_certificate_files_path}}"

    - name: Copy SSL Key Certificate
      copy:
        src: "{{https_certificate_key_files}}"
        dest: "{{https_certificate_key_files_path}}"
  when: not generate_certificates
  tags: test

- name: Generate a Self Signed OpenSSL certificate
  block:
    - debug: msg="Warning, Ansible is creating a self-signed certificate for Keycloak, this should not be done in production"
    - name: Create private key (RSA, 4096 bits)
      community.crypto.openssl_privatekey:
        path: "{{https_certificate_key_files_path}}"
    - name: Create certificate signing request (CSR) for self-signed certificate
      community.crypto.openssl_csr_pipe:
        privatekey_path: "{{https_certificate_key_files_path}}"
        common_name: "{{certificate_common_name}}"
        organization_name: "{{certificate_organization_name}}"
#        subject_alt_name: "{{certificate_subject_alt_names}}"
        country_name: "{{certificate_country_name}}"
        organizational_unit_name: "{{certificate_organizational_unit}}"
      register: csr

    - name: Create self-signed certificate from CSR
      community.crypto.x509_certificate:
        path: "{{https_certificate_files_path}}"
        csr_content: "{{ csr.csr }}"
        privatekey_path: "{{https_certificate_key_files_path}}"
        provider: selfsigned
  when: generate_certificates
  tags: test

- name: Set up TrustStore
  block:
    - name: Obtain Certificate
      ansible.builtin.get_url:
        url: "{{dod_certificate_url}}"
        dest: "{{keycloak_home}}/cert.zip"

    - name: Un-compress Certificate Archive
      ansible.builtin.unarchive:
        src: "{{keycloak_home}}/cert.zip"
        dest: "{{keycloak_home}}"
        remote_src: yes

    - name: Prepare Certificate
      shell: >
        openssl pkcs7 -in {{keycloak_home}}/Certificates_PKCS7_*/*.pem.p7b -print_certs -out {{keycloak_home}}/DoD_CAs.pem

    - name: Obtain Certificate
      java_cert:
        cert_path: "{{keycloak_home}}/DoD_CAs.pem"
        keystore_path: "{{spi_trust_store_file_path}}"
        keystore_pass: "{{spi_trust_store_password}}"
        keystore_create: true
        state: present
        cert_alias: DoD_CAs
        trust_cacert: true
#    - name:
  tags:
    - testTrustStore