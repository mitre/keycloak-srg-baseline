---
- name: HIGH | xccdf_hdf_group_KEYC-01-000022 | Keycloak must be configured to use secure protocols when connecting to directory services.
  block:
    - name: Set protocols in keycloak.conf
      ansible.builtin.blockinfile:
        path: "{{ keycloak_home }}/conf/keycloak.conf"
        block: |
          hostname-strict-https=true
          https-client-auth=required
        state: present
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PROTOCOLS"
      register: result
      check_mode: false
      changed_when: false
#      ignore_errors: true

    - name: Set HTTPS TrustStore in keycloak.conf
      ansible.builtin.blockinfile:
        path: "{{ keycloak_home }}/conf/keycloak.conf"
        block: |
          https-trust-store-file={{ https_truststore_file_path }}
          https-trust-store-password={{ https_truststore_password }}
          {{ security_option }}
        state: present
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - HTTPS TRUST STORE"
      register: result
      check_mode: false
      changed_when: false
#      ignore_errors: true
  tags:
    - cat1
    - high
    - xccdf_hdf_group_KEYC-01-000022
    - cert_config

- name: HIGH | xccdf_hdf_group_KEYC-01-000023 | Keycloak must be configured to use protocols that encrypt credentials when authenticating clients, as defined
    in the PPSM CAL and vulnerability assessments.
  block:
    - name: Set hashAlgorithm as initial policy in password_policy_string
      ansible.builtin.set_fact:
        password_policy_string: "hashAlgorithm(pbkdf2-sha256)"
      when: not password_policy_string | length > 0

    - name: Append hashAlgorithm to password_policy_string
      ansible.builtin.set_fact:
        password_policy_string: "{{ password_policy_string + ' and hashAlgorithm(pbkdf2-sha256)' }}"
      when:
        - password_policy_string | length > 0
        - '"hashAlgorithm(pbkdf2-sha256)" not in password_policy_string'

    - name: Set cache in keycloak.conf
      ansible.builtin.blockinfile:
        path: "{{ keycloak_home }}/conf/keycloak.conf"
        block: |
          cache=ispn
          cache-stack=tcp
        state: present
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - CACHE"
      register: result
      check_mode: false
      changed_when: false
#      ignore_errors: true
  tags:
    - cat1
    - high
    - xccdf_hdf_group_KEYC-01-000023

- name: HIGH | xccdf_hdf_group_KEYC-01-000025 | Keycloak must be configured to uniquely identify and authenticate organizational users.
  block:
#    - name: Create realm role
    - name: Create realm role
      ansible.builtin.shell: >
        {{ path }}kcadm.sh create roles -r {{ keycloak_realm }} -s name={{ role_policy_name }} -s 'description={{ role_policy_description }}'
      register: result
      check_mode: false
      changed_when: false
      ignore_errors: true

    - name: Create user in realm
      ansible.builtin.shell: >
        {{ path }}kcadm.sh add-roles --uusername {{ user_name }} --rolename {{ role_policy_name }} -r {{ keycloak_realm }}
      register: result
      check_mode: false
      changed_when: false
      ignore_errors: true
  when: xccdf_hdf_group_KEYC_01_000025
  tags:
    - cat1
    - high
    - xccdf_hdf_group_KEYC-01-000025


- name: HIGH | xccdf_hdf_group_KEYC-01-000036 | Keycloak must be configured to encrypt locally stored credentials using a FIPS-validated cryptographic module.
  block:
    - name: Set hashAlgorithm as initial policy in password_policy_string
      ansible.builtin.set_fact:
        password_policy_string: "hashAlgorithm(pbkdf2-sha256)"
      when: not password_policy_string | length > 0

    - name: Append hashAlgorithm to password_policy_string
      ansible.builtin.set_fact:
        password_policy_string: "{{ password_policy_string + ' and hashAlgorithm(pbkdf2-sha256)' }}"
      when:
        - password_policy_string | length > 0
        - '"hashAlgorithm(pbkdf2-sha256)" not in password_policy_string'

- name: HIGH | xccdf_hdf_group_KEYC-01-000040 | Keycloak must be configured to only accept certificates issued by a DoD-approved Certificate Authority for
    PKI-based authentication.
  block:
    - name: Set protocols in keycloak.conf
      ansible.builtin.blockinfile:
        path: "{{ keycloak_home }}/conf/keycloak.conf"
        block: |
          hostname-strict-https=true
          https-client-auth=required
        state: present
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - PROTOCOLS"
      register: result
      check_mode: false
      changed_when: false
#      ignore_errors: true

    - name: Set spi trust store in keycloak.conf
      ansible.builtin.blockinfile:
        path: "{{ keycloak_home }}/conf/keycloak.conf"
        block: |
          spi-truststore-file-file={{ spi_trust_store_file_path }}
          spi-truststore-file-password={{ spi_trust_store_password }}
          spi-truststore-file-hostname-verification-policy={{ spi_trust_store_policy }}
        state: present
        create: true
        marker: "# {mark} ANSIBLE MANAGED BLOCK - SPI TRUST STORE"
      register: result
      check_mode: false
      changed_when: false
#      ignore_errors: true

# TODO: Then inspect the certificates used in truststore
  tags:
    - cat1
    - high
    - xccdf_hdf_group_KEYC-01-000040
    - cert_config

- name: HIGH | xccdf_hdf_group_KEYC-01-000041 | Keycloak must be configured to not accept certificates that have been revoked for PKI-based authentication.
  community.general.keycloak_authentication:
    auth_keycloak_url: "{{ keycloak_server_address }}"
    auth_realm: "{{ keycloak_realm }}"
    auth_username: "{{ keycloak_admin_user }}"
    auth_password: "{{ keycloak_admin_password }}"
    realm: "{{ keycloak_realm }}"
    alias: "x509"
    copyFrom: "browser"
    authenticationExecutions:
      - providerId: "auth-x509-client-username-form"
        requirement: "REQUIRED"
        authenticationConfig:
          alias: "x509.execution.forms"
          config:
            x509-cert-auth.timestamp-validation-enabled: true
    state: present
  when: xccdf_hdf_group_KEYC_01_000041
  tags:
    - cat1
    - high
    - xccdf_hdf_group_KEYC-01-000041
    - cert_config